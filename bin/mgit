#!/bin/sh
## mgit.sh for mgit in /home/fulmine/Git/github/dieonar/config/bin
##
## Made by KING Jimmy
## Login   <fulmine@epitech.net>
##
## Started on  Thu Dec  4 14:46:22 2014 KING Jimmy
## Last update Mon Feb 16 20:02:44 2015 KING Jimmy
##

WHITE="\e[97m"
BLUE="\e[33m"
GREEN="\e[32m"
RED="\e[31m"
CYAN="\e[36m"

LRED="\e[91m"
LGREEN="\e[92m"
LBLUE="\e[94m"
LCYAN="\e[96m"

epitech_login="king_j"
epitech_token=""

github_login="dieonar"
enable_github=yes

function print_message {
    echo -e "["$LBLUE"KING"$WHITE"]["$LCYAN"GIT"$WHITE"] "$1"\e[0m"
}

function clone() {
    if [ "$enable_github" = false ]; then
        if [ -e $1 ]; then
            print_message "Usage: mgit clone [REPOSITORY] (USER)"
            exit
        fi

        if [ "$#" == 2 ]; then
            git clone $epitech_login@git.epitech.eu:/$2/$1
        else
            git clone $epitech_login@git.epitech.eu:/$epitech_login/$1
        fi
    else
        if [ -e $2 ]; then
            print_message "Usage: mgit clone [SERVER] [REPOSITORY] (USER)"
            exit
        fi
        if [ "$1" == "github" ]; then
            if [ "$#" == 3 ]; then
                git clone git@github.com:$3/$2
            else
                git clone git@github.com:$github_login/$2
            fi
        elif [ "$1" == "epitech" ]; then
            if [ "$#" == 3 ]; then
                git clone $epitech_login@git.epitech.eu:/$3/$2
            else
                git clone $epitech_login@git.epitech.eu:/$epitech_login/$2
            fi
        else
            print_message $LRED"Error"$WHITE": Server does not exist !"
        fi
    fi
}

function create {
    if [ -e $1 ]; then
        print_message "Usage: mgit create [REPOSITORY NAME] (PATH TO CLONE)"
        exit
    fi
    if [ "$#" != 0 ]; then
        print_message "Creating repository "$1"."
        blih -u $epitech_login $epitech_token repository create $1
        blih -u $epitech_login $epitech_token repository setacl $1 ramassage-tek r
        print_message "Repository "$1" has been created on server EPITECH"
    else
        print_message $RED"Error"$WHITE": Missing repository name"
    fi
}

function rights {
    if [ -e $2 ]; then
        print_message "Usage: mgit right [REPOSITORY NAME] [USER] (RIGHTS)"
        exit
    fi
    if [ "$#" != 0 ]; then
        blih -u $epitech_login $epitech_token repository setacl $1 $2 $3
        print_message "Rights ("$3") has been set on repository "$1" for user "$2
    else
        print_message $RED"Error"$WHITE": Missing repository name"
    fi
}

function delete {
    if [ -e $1 ]; then
        print_message "Usage: mgit delete [REPOSITORY NAME]"
        exit
    fi
    if [ "$#" != 0 ]; then
        read -p "Do you really want to delete the repository "$1"? [Y/N] " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
            blih -u $epitech_login $epitech_token repository delete $1
            print_message "Repository "$1" has been delete from the epitech server"
        fi
    else
        print_message $RED"Error"$WHITE": Missing repository name"
    fi
}

function check {
    if [ -e $1 ]; then
        print_message "Usage: mgit check [REPOSITORY NAME]";
        exit
    fi
    print_message "Checking rights on the repository "$1":"
    blih -u $epitech_login $epitech_token repository getacl $1
}

function push {
    print_message "Updating repository with local changes"
    if [ -e $1]; then
        git add --all
        git commit -am "Update, using mgit"
        git push origin master
    else
        git add --all
        git commit -am $1
        git push origin master
    fi
}

if [ -e $1 ]; then
    print_message "Usage: mgit [ACTION]"
    echo -e "\tFlag [create] : create new repository on epitech server"
    echo -e "\tFlag [clone]  : clone a repository from github or epitech servers"
    echo -e "\tFlag [check]  : displays users rights on a epitech repository"
    echo -e "\tFlag [right]  : set users rights on a epitech repository"
    echo -e "\tFlag [delete] : delete a repository from epitech server"
    echo -e "\tFlag [push]   : update a repository using local refs"
    exit
fi

case "$1" in
    "create" )
        create $2 $3;;
    "clone" )
        clone $2 $3 $4;;
    "check" )
        check $2;;
    "right" )
	rights $2 $3 $4;;
    "delete" )
        delete $2;;
    "push" )
        push $2;;
esac;
